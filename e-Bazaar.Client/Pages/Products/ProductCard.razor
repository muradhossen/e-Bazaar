@using e_Bazaar.Client.ViewModels

<div class="col-lg-3 col-md-4 col-sm-6 mb-4">
    <div class="card h-100 product-card">
        <div class="card-body text-center">
            <img src="@Product.ImageUrl" alt="@Product.Name" class="img-fluid mb-3" style="height: 150px; object-fit: contain;">
            <h6 class="card-title">@Product.Name</h6>
            <div class="d-flex justify-content-center align-items-center mb-2">
                <span class="h5 mb-0 text-primary fw-bold">@Product.Price</span>
                @if (Product.OriginalPrice.HasValue && Product.HasDiscount)
                {
                    <span class="text-muted text-decoration-line-through ms-2">@Product.OriginalPrice</span>
                }
            </div>
            <div class="d-flex align-items-center justify-content-center">
                <button class="btn btn-outline-secondary btn-sm me-2" @onclick="() => Decrease(Product)">-</button>
                @* <span class="mx-2 fw-bold">@GetProductQuantity(Product.Id)</span> *@
                <button class="btn btn-outline-secondary btn-sm me-3" @onclick="() => AddOrIncrese(Product)">+</button>
                <button class="btn btn-outline-primary btn-sm" @onclick="() => AddOrIncrese(Product)">
                    Add to cart
                </button>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter] public Product Product { get; set; } = new();
    [Parameter] public EventCallback<Product> DecreaseQuantity { get; set; }
    [Parameter] public EventCallback<Product> AddToCart { get; set; }

    public void Decrease(Product product)
    {
        DecreaseQuantity.InvokeAsync(product);
    }

    public void AddOrIncrese(Product product)
    {
        AddToCart.InvokeAsync(product);
    }
}
